package leetcode.easy;

import java.util.*;

/**
 * TODO Time
 */
public class No_0001_TwoSum {

  public static int[] twoSum(int[] nums, int target) {
    Map<Integer, Integer> map = new HashMap<>();
    for(int i = 0; i < nums.length; i ++){
      map.put(nums[i],i);
    }
    for(int i = 0; i < nums.length; i ++){
      int first = nums[i];
      int other = target - first;
      if(map.containsKey(other) && map.get(other) != i){
        return new int[]{i, map.get(other)};
      }
    }
    return new int[]{0,0};
  }
  /**
   * Runtime: 2 ms, faster than 98.93% of Java online submissions for Two Sum.
   *
   * Memory Usage: 37.2 MB, less than 98.95% of Java online submissions for Two Sum.
   *
   * 0次调试错误，然后成功。
   *
   * 错误：
   *
   * 1错：
   *
   * 2错：
   *
   * 一句话反思：
   *
   * 新知识：
   */


  public static void main(String[] args) {
    int[] input = new int[]{2,7,11,15};
    int[] actual = twoSum(input, 9);

    System.out.println(Arrays.toString(actual));
    System.out.println("[0, 1]".equals(Arrays.toString(actual)));
  }
}
